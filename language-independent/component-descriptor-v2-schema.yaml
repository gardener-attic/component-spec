$id: 'https://gardener.cloud/schemas/component-descriptor-v2'
$schema: 'https://json-schema.org/draft-07/schema#'
description: 'Gardener Component Descriptor v2 schema'
definitions:
  meta:
    type: 'object'
    description: 'component descriptor metadata'
    required:
      - 'schemaVersion'
    properties:
      schemaVersion:
        type: 'string'

  label:
    type: 'object'
    required:
      - 'name'
      - 'value'

  identityAttribute:
    type: 'object'
    patternProperties:
      '.*':
        type: 'string'
    additionalProperties: False

  repositoryContext:
    type: 'object'
    required:
      - 'baseUrl'
      - 'type'
    properties:
      baseUrl:
        type: 'string'
      type:
        type: 'string'
        enum: ['ociRegistry']

  access:
    type: 'object'
    description: 'base type for accesses (for extensions)'
    required:
      - 'type'

  githubAccess:
    type: 'object'
    required:
      - 'type'
      - 'repoUrl'
      - 'ref'
    properties:
      type:
        type: 'string'
        enum: ['github']
      repoUrl:
        type: 'string'
      ref:
        type: 'string'
      commit:
        type: 'string'

  noneAccess:
    type: 'object'
    required:
      - 'type'
    properties:
      type:
        type: 'string'
        enum: ['None']

  sourceDefinition:
    type: 'object'
    required:
      - name
      - version
      - type
      - access
    properties:
      name:
        type: 'string'
      extraIdentity:
        $ref: '#/definitions/identityAttribute'
      version:
        type: 'string'
      type:
        type: 'string'
        enum: ['git']
      labels:
        type: 'array'
        items:
          $ref: '#/definitions/label'
      access:
        anyOf:
          - $ref: '#/definitions/access'
          - $ref: '#/definitions/githubAccess'
          - $ref: '#/definitions/httpAccess'

  srcRef:
    type: 'object'
    description: 'a reference to a (component-local) source'
    properties:
      identitySelector:
        $ref: '#/definitions/identityAttribute'
      labels:
        type: 'array'
        items:
          $ref: '#/definitions/label'

  componentReference:
    type: 'object'
    description: 'a reference to a component'
    required:
      - 'name'
      - 'componentName'
      - 'version'
    properties:
      name:
        type: 'string' # actually: component-type w/ special restrictions
      extraIdentity:
        $ref: '#/definitions/identityAttribute'
      version:
        type: 'string' # actually: relaxed semver?
      labels:
        type: 'array'
        items:
          $ref: '#/definitions/label'

  resourceType:
    type: 'object'
    description: 'base type for resources'
    required:
      - 'name'
      - 'version' # for local resources, this must match component's version
      - 'type'
      - 'relation'
      - 'access'
    properties:
      name:
        type: 'string'
      extraIdentity:
        $ref: '#/definitions/identityAttribute'
      version:
        type: 'string'
      type:
        type: 'string'
      srcRefs:
        type: 'array'
        items:
          $ref: '#/definitions/srcRef'
      relation:
        type: 'string'
        enum: ['local', 'external']
      labels:
        type: 'array'
        items:
          $ref: '#/definitions/label'
      access:
        anyOf:
        - $ref: '#/definitions/access'
        - $ref: '#/definitions/ociBlobAccess'
        - $ref: '#/definitions/localFilesystemBlobAccess'
        - $ref: '#/definitions/localOciBlobAccessAccess'

  ociImageAccess:
    type: 'object'
    required:
      - 'type'
      - 'imageReference'
    properties:
      type:
        type: 'string'
        enum: ['ociRegistry']
      imageReference:
        type: 'string'

  ociBlobAccess:
    type: 'object'
    required:
    - 'type'
    - 'layer'
    properties:
      type:
        type: 'string'
        enum: [ 'ociBlob' ]
      ref:
        description: 'A oci reference to the manifest'
        type: 'string'
      mediaType:
        description: 'The media type of the object this access refers to'
        type: 'string'
      digest:
        description: 'The digest of the targeted content'
        type: 'string'
      size:
        description: 'The size in bytes of the blob'
        type: 'number'

  localFilesystemBlobAccess:
    type: 'object'
      required:
      - 'type'
      - 'filename'
      properties:
        type:
          type: 'string'
          enum: [ 'localFilesystemBlob' ]
        filename:
          description: 'filename of the blob that is located in the "blobs" directory'
          type: 'string'

  localOciBlobAccess:
    type: 'object'
      required:
      - 'type'
      - 'filename'
      properties:
        type:
          type: 'string'
          enum: [ 'localOciBlob' ]
        digest:
          description: 'digest of the layer within the current component descriptor'
          type: 'string'

  ociImageResource:
    type: 'object'
    required:
      - 'name'
      - 'version'
      - 'type'
      - 'access'
    properties:
      name:
        type: 'string'
      version:
        type: 'string'
      type:
        type: 'string'
        enum: ['ociImage']
      labels:
        type: 'array'
        items:
          $ref: '#/definitions/label'
      access:
        $ref: '#/definitions/ociImageAccess'

  httpAccess:
    type: 'object'
    required:
      - 'type'
      - 'url'
    properties:
      type:
        type: 'string'
        enum: ['http']
      url:
        type: 'string'

  genericAccess:
    type: 'object'
    required:
      - 'type'
    properties:
      type:
        type: 'string'
        enum: ['generic']

  genericResource:
    type: 'object'
    required:
      - 'name'
      - 'version'
      - 'type'
      - 'access'
    properties:
      name:
        type: 'string'
      version:
        type: 'string'
      type:
        type: 'string'
        enum: ['generic']
      labels:
        type: 'array'
        items:
          $ref: '#/definitions/label'
      access:
        $ref: '#/definitions/genericAccess'

  component:
    type: 'object'
    description: 'a component'
    required:
      - 'name'
      - 'version'
      - 'repositoryContexts'
      - 'provider'
      - 'sources'
      - 'componentReferences'
      - 'resources'
    properties:
      name:
        type: 'string' # actually: component-type w/ special restrictions
      version:
        type: 'string' # actually: relaxed semver?
      repositoryContexts:
        type: 'array'
        items:
          $ref: '#/definitions/repositoryContext'
      provider:
        type: 'string'
        enum: ['internal', 'external']
      labels:
        type: 'array'
        items:
          $ref: '#/definitions/label'
      sources:
        type: 'array'
        items:
          $ref: '#/definitions/sourceDefinition'
      componentReferences:
        type: 'array'
        items:
          $ref: '#/definitions/componentReference'
      resources:
        type: 'array'
        items:
          anyOf:
            - $ref: '#/definitions/resourceType'
            - $ref: '#/definitions/ociImageResource'
            - $ref: '#/definitions/genericResource'

    componentReferences: {}


type: 'object'
required:
  - 'meta'
  - 'component'
properties:
  meta:
    $ref: '#/definitions/meta'
  component:
    $ref: '#/definitions/component'
