$id: 'https://gardener.cloud/schemas/component-descriptor-v2'
$schema: 'https://json-schema.org/draft-07/schema#'
description: 'Gardener Component Descriptor v2 schema'
definitions:
  meta:
    type: 'object'
    description: 'component descriptor metadata'
    required:
      - 'schemaVersion'
    properties:
      schemaVersion:
        type: 'string'

  repositoryContext:
    type: 'object'
    required:
      - 'baseUrl'
      - 'type'
    properties:
      baseUrl:
        type: 'string'
      type:
        type: 'string'
        enum: ['ociRegistry']

  access:
    type: 'object'
    description: 'base type for accesses (for extensions)'
    required:
      - 'type'

  githubAccess:
    type: 'object'
    required:
      - 'type'
      - 'repoUrl'
      - 'ref'
    properties:
      type:
        type: 'string'
        enum: ['github']
      repoUrl:
        type: 'string'
      ref:
        type: 'string'

  sourceDefinition:
    type: 'object'
    required:
      - name
      - type
      - access
    properties:
      name:
        type: 'string'
      type:
        type: 'string'
        enum: ['git']
      access:
        anyOf:
          - $ref: '#/definitions/access'
          - $ref: '#/definitions/githubAccess'

  componentReference:
    type: 'object'
    description: 'a reference to a component'
    required:
      - 'name'
      - 'version'
    properties:
      name:
        type: 'string' # actually: component-type w/ special restrictions
      version:
        type: 'string' # actually: relaxed semver?

  resourceType:
    type: 'object'
    description: 'base type for resources'
    required:
      - 'name'
      - 'version' # for localResources, this must match component's version
      - 'type'
      - 'access'
    properties:
      name:
        type: 'string'
      version:
        type: 'string'
      type:
        type: 'string'
      access:
        $ref: '#definitions/access'

  ociImageAccess:
    type: 'object'
    required:
      - 'type'
      - 'imageReference'
    properties:
      type:
        type: 'string'
        enum: ['ociRegistry']
      imageReference:
        type: 'string'

  ociImageResource:
    type: 'object'
    required:
      - 'name'
      - 'version'
      - 'type'
      - 'access'
    properties:
      name:
        type: 'string'
      version:
        type: 'string'
      type:
        type: 'string'
        enum: ['ociImage']
      access:
        $ref: '#/definitions/ociImageAccess'

  webAccess:
    type: 'object'
    required:
      - 'type'
      - 'url'
    properties:
      type:
        type: 'string'
        enum: ['web']
      url:
        type: 'string'

  webResource:
    type: 'object'
    required:
      - 'name'
      - 'version'
      - 'type'
      - 'access'
    properties:
      name:
        type: 'string'
      version:
        type: 'string'
      type:
        type: 'string'
        enum: ['web']
      access:
        $ref: '#/definitions/webAccess'

  genericAccess:
    type: 'object'
    required:
      - 'type'
    properties:
      type:
        type: 'string'
        enum: ['generic']

  genericResource:
    type: 'object'
    required:
      - 'name'
      - 'version'
      - 'type'
      - 'access'
    properties:
      name:
        type: 'string'
      version:
        type: 'string'
      type:
        type: 'string'
        enum: ['generic']
      access:
        $ref: '#/definitions/genericAccess'

  component:
    type: 'object'
    description: 'a component'
    required:
      - 'name'
      - 'version'
      - 'repositoryContexts'
      - 'provider'
      - 'sources'
      - 'componentReferences'
      - 'localResources'
      - 'externalResources'
    properties:
      name:
        type: 'string' # actually: component-type w/ special restrictions
      version:
        type: 'string' # actually: relaxed semver?
      repositoryContexts:
        type: 'array'
        items:
          $ref: '#/definitions/repositoryContext'
      provider:
        type: 'string'
        enum: ['internal', 'external']
      sources:
        type: 'array'
        items:
          $ref: '#/definitions/sourceDefinition'
      componentReferences:
        type: 'array'
        items:
          $ref: '#/definitions/componentReference'
      localResources:
        type: 'array'
        items:
          anyOf:
            - $ref: '#/definitions/resourceType'
            - $ref: '#/definitions/ociImageResource'
            - $ref: '#/definitions/webResource'
            - $ref: '#/definitions/genericResource'
      externalResources:
        type: 'array'
        items:
          anyOf:
            - $ref: '#/definitions/resourceType'
            - $ref: '#/definitions/ociImageResource'
            - $ref: '#/definitions/webResource'
            - $ref: '#/definitions/genericResource'

    componentReferences: {}


type: 'object'
required:
  - 'meta'
  - 'component'
properties:
  meta:
    $ref: '#/definitions/meta'
  component:
    $ref: '#/definitions/component'
